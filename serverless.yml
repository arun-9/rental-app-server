service: sls-postgresql-example

plugins:
  - serverless-aws-lambda

package:
  individually: true
  files:
    - { at: .aws_lambda/bundled_node_modules/, as: node_modules }

custom:
  timeout: 10
  serverless-aws-lambda:
    configPath: ./slsconfig.ts

  local:
    DB_HOST: localhost:5432
    DB_NAME: myDb
    DB_USER: postgres
    DB_PASSWORD: 5678

  prod:
    DB_HOST: prodhost:5432
    DB_NAME: myProdDb
    DB_USER: produser
    DB_PASSWORD: prodsecret

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-3
  timeout: ${self:custom.timeout}
  versionFunctions: false
  deploymentMethod: direct

  environment:
    TIMEOUT: ${self:custom.timeout}
    DB_HOST: ${self:custom.${opt:stage, 'local'}.DB_HOST}
    DB_NAME: ${self:custom.${opt:stage, 'local'}.DB_NAME}
    DB_USER: ${self:custom.${opt:stage, 'local'}.DB_USER}
    DB_PASSWORD: ${self:custom.${opt:stage, 'local'}.DB_PASSWORD}

  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:3001
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
      allowCredentials: true

functions:
  # Manager APIs
  createManager:
    handler: src/handlers/createManager.default
    events:
      - httpApi:
          method: POST
          path: /managers

  getManager:
    handler: src/handlers/getManager.default
    events:
      - httpApi:
          method: GET
          path: /managers
      - httpApi:
          method: GET
          path: /managers/{cognitoId}

  updateManager:
    handler: src/handlers/updateManager.default
    events:
      - httpApi:
          method: PUT
          path: /managers/{id}

  deleteManager:
    handler: src/handlers/deleteManager.default
    events:
      - httpApi:
          method: DELETE
          path: /managers/{id}

  # Tenant APIs
  createTenant:
    handler: src/handlers/createTenant.default
    events:
      - httpApi:
          method: POST
          path: /tenant

  getTenant:
    handler: src/handlers/getTenant.default
    events:
      - httpApi:
          method: GET
          path: /tenants
      - httpApi:
          method: GET
          path: /tenants/{cognitoId}

  updateTenant:
    handler: src/handlers/updateTenant.default
    events:
      - httpApi:
          method: PUT
          path: /tenants/{cognitoId}

  deleteTenant:
    handler: src/handlers/deleteTenant.default
    events:
      - httpApi:
          method: DELETE
          path: /tenants/{cognitoId}

  # Property APIs
  createProperty:
    handler: src/handlers/createProperty.default
    events:
      - httpApi:
          method: POST
          path: /property

  getProperty:
    handler: src/handlers/getProperty.default
    events:
      - httpApi:
          method: GET
          path: /properties
      - httpApi:
          method: GET
          path: /properties/{id}

  updateProperty:
    handler: src/handlers/updateProperty.default
    events:
      - httpApi:
          method: PUT
          path: /properties/{id}

  deleteProperty:
    handler: src/handlers/deleteProperty.default
    events:
      - httpApi:
          method: DELETE
          path: /properties/{id}

  # Unit APIs
  createUnit:
    handler: src/handlers/createUnit.default
    events:
      - httpApi:
          method: POST
          path: /unit

  getUnit:
    handler: src/handlers/getUnit.default
    events:
      - httpApi:
          method: GET
          path: /units
      - httpApi:
          method: GET
          path: /units/{id}

  updateUnit:
    handler: src/handlers/updateUnit.default
    events:
      - httpApi:
          method: PUT
          path: /units/{id}

  deleteUnit:
    handler: src/handlers/deleteUnit.default
    events:
      - httpApi:
          method: DELETE
          path: /units/{id}
