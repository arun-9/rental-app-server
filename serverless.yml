service: rent-management-service

plugins:
  - serverless-aws-lambda

package:
  individually: true
  files:
    - { at: .aws_lambda/bundled_node_modules/, as: node_modules }

custom:
  timeout: 10

  # DB environment config per stage
  local:
    DB_HOST: localhost
    DB_PORT: 5432
    DB_NAME: myDb
    DB_USER: postgres
    DB_PASSWORD: 5678

  prod:
    DB_HOST: prodhost
    DB_PORT: 5432
    DB_NAME: myProdDb
    DB_USER: produser
    DB_PASSWORD: prodsecret

  # Plugin configuration (used by slsconfig.ts)
  serverless-aws-lambda:
    configPath: ./slsconfig.ts

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-3
  timeout: ${self:custom.timeout}
  deploymentMethod: direct

  environment:
    DB_HOST: ${self:custom.${opt:stage}.DB_HOST}
    DB_PORT: ${self:custom.${opt:stage}.DB_PORT}
    DB_NAME: ${self:custom.${opt:stage}.DB_NAME}
    DB_USER: ${self:custom.${opt:stage}.DB_USER}
    DB_PASSWORD: ${self:custom.${opt:stage}.DB_PASSWORD}

  httpApi:
    cors:
      allowedOrigins:
        - "*"
      allowedHeaders:
        - "*"
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS

functions:
  createManager:
    handler: src/handlers/createManager.handler
    events:
      - httpApi:
          method: POST
          path: /managers

  getManager:
    handler: src/handlers/getManager.handler
    events:
      - httpApi:
          method: GET
          path: /managers/{cognitoId}
