{
  "version": 3,
  "sources": ["../../src/handlers/insertUnit.ts", "../../src/db/connection.ts", "../../src/db/models/units.ts"],
  "sourcesContent": ["import { connectToDb } from \"../db/connection\";\r\nimport { getUnitModel } from \"../db/models/units\";\r\nimport type { IUnits} from \"../db/models/units\";\r\nimport type { Sequelize } from \"sequelize\";\r\nimport type { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\";\r\n\r\nlet sequelize: Sequelize | null = null;\r\nlet Units: IUnits | null = null;\r\n\r\nexport default async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\r\n  if (!sequelize) {\r\n    sequelize = await connectToDb();\r\n    Units = await getUnitModel(sequelize);\r\n  }\r\n  const createdUnit = await Units.create(JSON.parse(event.body), { returning: true });\r\n\r\n  return {\r\n    statusCode: 201,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(createdUnit.toJSON()),\r\n  };\r\n};\r\n", "import { Sequelize } from \"sequelize\";\r\n\r\nconst { TIMEOUT, DB_HOST, DB_NAME, DB_USER, DB_PASSWORD } = process.env;\r\nconst timeout = Number(TIMEOUT) * 1000;\r\nconst URI = `postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}`;\r\n\r\nlet sequelize: Sequelize | null = null;\r\n\r\n// https://sequelize.org/docs/v6/other-topics/aws-lambda/#tldr\r\nexport const connectToDb = async (): Promise<Sequelize> => {\r\n  if (sequelize) {\r\n    sequelize.connectionManager.initPools();\r\n\r\n    if (sequelize.connectionManager.hasOwnProperty(\"getConnection\")) {\r\n      delete sequelize.connectionManager.getConnection;\r\n    }\r\n    return sequelize;\r\n  }\r\n\r\n  sequelize = new Sequelize(URI, {\r\n    logging: false,\r\n    pool: {\r\n      min: 0,\r\n      max: 2,\r\n      idle: 0,\r\n      acquire: 3000,\r\n      evict: timeout,\r\n    },\r\n  });\r\n  await sequelize.authenticate();\r\n\r\n  return sequelize;\r\n};\r\n", "import { Sequelize, Model, DataTypes } from \"sequelize\";\r\nimport type { ModelAttributes } from \"sequelize\";\r\nclass Units extends Model {}\r\n\r\nconst schema: ModelAttributes = {\r\n  id: {\r\n    primaryKey: true,\r\n    type: DataTypes.INTEGER,\r\n    autoIncrement: true,\r\n  },\r\n  // This field is `UNIT NO` in the UI\r\n  unitNumber: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false,\r\n  },\r\n  status: {\r\n   type: DataTypes.ENUM('vacant', 'occupied'),\r\n    defaultValue: 'vacant'\r\n  },\r\n  // Foreign key\r\n  propertyId: {\r\n    type: DataTypes.INTEGER,\r\n    allowNull: false,\r\n    references: {\r\n      model: \"properties\", \r\n      key: \"id\",\r\n    },\r\n    onDelete: \"CASCADE\",\r\n    onUpdate: \"CASCADE\",\r\n  },\r\n};\r\n\r\ntype IUnits = typeof Units;\r\nexport const getUnitModel = async (sequelize?: Sequelize): Promise<IUnits> => {\r\n  if (sequelize) {\r\n    Units.init(schema, { sequelize, modelName: \"units\", timestamps: false });\r\n    await Units.sync();\r\n  }\r\n\r\n  return Units;\r\n};\r\n\r\nexport type { IUnits };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,uBAA0B;AAE1B,IAAM,EAAE,SAAS,SAAS,SAAS,SAAS,YAAY,IAAI,QAAQ;AACpE,IAAM,UAAU,OAAO,OAAO,IAAI;AAClC,IAAM,MAAM,cAAc,OAAO,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO;AAEtE,IAAI,YAA8B;AAG3B,IAAM,cAAc,YAAgC;AACzD,MAAI,WAAW;AACb,cAAU,kBAAkB,UAAU;AAEtC,QAAI,UAAU,kBAAkB,eAAe,eAAe,GAAG;AAC/D,aAAO,UAAU,kBAAkB;AAAA,IACrC;AACA,WAAO;AAAA,EACT;AAEA,cAAY,IAAI,2BAAU,KAAK;AAAA,IAC7B,SAAS;AAAA,IACT,MAAM;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,IACT;AAAA,EACF,CAAC;AACD,QAAM,UAAU,aAAa;AAE7B,SAAO;AACT;;;AChCA,IAAAA,oBAA4C;AAE5C,IAAM,QAAN,cAAoB,wBAAM;AAAC;AAE3B,IAAM,SAA0B;AAAA,EAC9B,IAAI;AAAA,IACF,YAAY;AAAA,IACZ,MAAM,4BAAU;AAAA,IAChB,eAAe;AAAA,EACjB;AAAA;AAAA,EAEA,YAAY;AAAA,IACV,MAAM,4BAAU;AAAA,IAChB,WAAW;AAAA,EACb;AAAA,EACA,QAAQ;AAAA,IACP,MAAM,4BAAU,KAAK,UAAU,UAAU;AAAA,IACxC,cAAc;AAAA,EAChB;AAAA;AAAA,EAEA,YAAY;AAAA,IACV,MAAM,4BAAU;AAAA,IAChB,WAAW;AAAA,IACX,YAAY;AAAA,MACV,OAAO;AAAA,MACP,KAAK;AAAA,IACP;AAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,EACZ;AACF;AAGO,IAAM,eAAe,OAAOC,eAA2C;AAC5E,MAAIA,YAAW;AACb,UAAM,KAAK,QAAQ,EAAE,WAAAA,YAAW,WAAW,SAAS,YAAY,MAAM,CAAC;AACvE,UAAM,MAAM,KAAK;AAAA,EACnB;AAEA,SAAO;AACT;;;AFlCA,IAAIC,aAA8B;AAClC,IAAIC,SAAuB;AAE3B,IAAO,qBAAQ,OAAO,UAAgE;AACpF,MAAI,CAACD,YAAW;AACd,IAAAA,aAAY,MAAM,YAAY;AAC9B,IAAAC,SAAQ,MAAM,aAAaD,UAAS;AAAA,EACtC;AACA,QAAM,cAAc,MAAMC,OAAM,OAAO,KAAK,MAAM,MAAM,IAAI,GAAG,EAAE,WAAW,KAAK,CAAC;AAElF,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,SAAS;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,IACA,MAAM,KAAK,UAAU,YAAY,OAAO,CAAC;AAAA,EAC3C;AACF;",
  "names": ["import_sequelize", "sequelize", "sequelize", "Units"]
}
